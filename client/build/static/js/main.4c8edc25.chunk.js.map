{"version":3,"sources":["components/Grid/Container/index.js","components/Grid/Col/index.js","components/Navbar/index.js","components/Grid/Row/index.js","components/SearchForm/index.js","components/Cards/ForegroundCard/index.js","utils/API.js","pages/SearchPage.js","components/List/index.js","pages/SavedPage.js","App.js","registerServiceWorker.js","index.js"],"names":["Container","props","react_default","a","createElement","className","children","Col","size","split","map","join","NavBar","react_router_dom","to","window","location","pathname","Row","_ref","fluid","concat","SearchForm","htmlFor","onChange","inputChangeHandler","name","type","id","placeholder","onClick","FormSubmissionHandler","refreshPage","ForegroundCard","key","Grid_Col","alt","title","src","image","authors","description","href","link","API","search","axios","get","getBooks","getBook","saveBook","bookInfo","post","deleteBook","delete","SearchPage","state","books","e","_this","setState","Object","defineProperty","target","value","console","log","getBooksHandler","then","res","data","catch","message","searchBooksHandler","query","items","i","volumeInfo","imageLinks","thumbnail","previewLink","err","saveBookHandler","book","find","infoLink","formSubmissionHandler","preventDefault","this","API_URL","reload","_this2","Grid_Container","Grid_Row","components_SearchForm","handleInputChange","handleFormSubmit","item","Cards_ForegroundCard","button","Component","List","SavedPage","getSavedBooks","BookDeleteHandler","icon","length","List_List","subtitle","Button","App","Navbar","react_router","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4c8edc25.chunk.js","sourcesContent":["// Dependencies\r\nimport React from \"react\";\r\n\r\n// Container Component\r\nfunction Container(props) {\r\n    return <div className = \"container fluid\">{props.children}</div>;\r\n};\r\n\r\n// Exports\r\nexport default Container;","// Dependencies\r\nimport React from \"react\";\r\n\r\n// This component allows developer to set a column's \"size\" prop instead of its className\r\n// This also allows the developer to omit the col- at the start of each Bootstrap column class, (example: size=\"md-12\" instead of className=\"col-md-12\")\r\n\r\n\r\n// Col Component\r\nfunction Col(props) {\r\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\r\n\r\n  return  (\r\n  <div className={size}>{props.children}</div>\r\n  );\r\n};\r\n\r\nexport default Col;\r\n","// Dependencies\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n// NavBar Component\r\nfunction NavBar() {\r\n    return (\r\n        <nav className = \"navbar-expand-lg navbar-light bg-light\">\r\n            <Link className=\"navbar-brand\" to = \"/\">Google Book Search</Link>\r\n            <div>\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                            to = \"/\"\r\n                            className = {\r\n                                window.location.pathname === \"/\" ||\r\n                                window.location.pathname === \"/search\"\r\n                                ? \"nav-link active\"\r\n                                : \"nav-link\"\r\n                            }\r\n                            >Search</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                        to = \"/saved\"\r\n                        className = {\r\n                            window.location.pathname === \"/saved\"\r\n                            ? \"nav-link active\"\r\n                            : \"nav-link\"\r\n                        }\r\n                        >Saved</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\nexport default NavBar;","// Dependencies\r\nimport React from \"react\";\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\n// Row Component\r\nfunction Row({ fluid, children }) {\r\n    return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n};\r\n\r\nexport default Row;","// Dependencies\r\nimport React from \"react\";\r\n\r\n// SearchForm component\r\nfunction SearchForm(props) {\r\n    return (\r\n        <form className = \"form-group\">\r\n            <div>\r\n                {/* Label will update with search */}\r\n                <label htmlFor = \"Search\"></label>\r\n                <input\r\n                    onChange={props.inputChangeHandler}\r\n                    name=\"search\"\r\n                    type=\"text\"\r\n                    id=\"search\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search for a Book...\"\r\n                />\r\n                {/* Search Button */}\r\n                <button onClick = {props.FormSubmissionHandler} className = \"btn btn-primary\">\r\n                    Search\r\n                </button>\r\n                {/* Reset Button - Clears search */}\r\n                <button onClick = {props.refreshPage} className = \"btn btn-danger\">\r\n                    Reset\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SearchForm;","// Dependencies\r\nimport React from \"react\";\r\nimport Col from \"../../Grid/Col\";\r\n\r\n// Foreground Card Component\r\nfunction ForegroundCard(props) {\r\n    return (\r\n        <div>\r\n            <div className  = \"card bg-dark mb-4\" key = {props.id}>\r\n                <div>\r\n                    <Col size = \"md-3\">\r\n                        <img\r\n                            alt={props.title}\r\n                            className=\"card-img-top\"\r\n                            src={props.image}\r\n                        />\r\n                    </Col>\r\n                </div>\r\n                <h3 className = \"card-title\">\r\n                    {props.title}\r\n                </h3>\r\n                <h4 className = \"card-subtitle\">\r\n                    by {props.authors}\r\n                </h4>\r\n                <div className = \"card-text\">\r\n                    {props.description}\r\n                </div>\r\n                <div>\r\n                    <a href = {props.link} className = \"btn btn-primary\">\r\n                        Open\r\n                    </a>\r\n                    <button className = \"btn btn-secondary\">\r\n                        Save\r\n                    </button>\r\n                </div> \r\n            </div>\r\n            <hr></hr>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForegroundCard;","// Dependencies \r\nimport axios from \"axios\";\r\n\r\nconst API_URL = \"https://www.googleapis.com/books/v1/volumes?q=\";\r\n\r\nexport default {\r\n    // API FUNCTIONS\r\n    // Search query\r\n    search: function (search) {\r\n        return axios.get(API_URL + search);\r\n    },\r\n    // Read all\r\n    getBooks: function () {\r\n        return axios.get(\"/api/books\");\r\n    },\r\n    // Read\r\n    getBook: function(id) {\r\n        return axios.get(\"api/books/\" + id);\r\n    },\r\n    // Save\r\n    saveBook: function (bookInfo) {\r\n        return axios.post(\"/api/books\", bookInfo);\r\n    },\r\n    // Delete\r\n    deleteBook: function (id) {\r\n        return axios.delete(\"/api/books\" + id);\r\n    }\r\n};","// Dependencies\r\nimport React, { Component } from \"react\";\r\n\r\nimport Container from \"../components/Grid/Container\";\r\nimport Col from \"../components/Grid/Col\";\r\nimport Row from \"../components/Grid/Row\";\r\nimport SearchForm from \"../components/SearchForm\";\r\nimport ForegroundCard from \"../components/Cards/ForegroundCard\";\r\n\r\nimport API from \"../utils/API\";\r\n\r\nclass SearchPage extends Component {\r\n    state = { books: [], search: '' };\r\n    \r\n    // Initial State\r\n    componentDidMount() {\r\n        const API_URL = \"https://www.googleapis.com/books/v1/volumes?q=\";\r\n        this.searchBooksHandler(\r\n            API_URL + \"lord+of+the+rings\"\r\n          );\r\n    };\r\n    // Reload the version of the page cached by the browser\r\n    refreshPage() {\r\n        window.location.reload();\r\n    };\r\n\r\n\r\n    // Handler Functions\r\n    inputChangeHandler = (e) => {\r\n        this.setState({\r\n          [e.target.name]: e.target.value,\r\n        });\r\n        console.log(\"New Input: \", this.state.search);\r\n      };\r\n\r\n    getBooksHandler = () => {\r\n        API.getBooks(this.state.search)\r\n          .then((res) =>\r\n            this.setState({\r\n              books: res.data,\r\n            })\r\n          )\r\n          .catch(() =>\r\n            this.setState({\r\n              books: [],\r\n              message: \"Book Not found\",\r\n            })\r\n          );\r\n    };\r\n\r\n    searchBooksHandler = (query) => {\r\n        API.search(query)\r\n          .then((res) => {\r\n            console.log(res);\r\n            this.setState({\r\n                \r\n                books: res.data.items.map((e, i) => ({\r\n                    title: e.volumeInfo.title,\r\n                    authors: e.volumeInfo.authors,\r\n                    description: e.volumeInfo.description,\r\n                    image: e.volumeInfo.imageLinks.thumbnail,\r\n                    link: e.volumeInfo.previewLink,\r\n                    key: e.id,\r\n              })),\r\n            \r\n            });\r\n          })\r\n          .catch((err) => console.log(err));\r\n    };\r\n    \r\n    saveBookHandler = (id) => {\r\n        const book = this.state.books.find((book) => book.id === id);\r\n        API.saveBook({\r\n          title: book.volumeInfo.title,\r\n          authors: book.volumeInfo.authors,\r\n          description: book.volumeInfo.description,\r\n          image: book.volumeInfo.imageLinks.thumbnail,\r\n          link: book.volumeInfo.infoLink,\r\n          key: book.id,\r\n        }).then(() => this.getBooks());\r\n    };\r\n\r\n    formSubmissionHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"Button Clicked: \", this.state.search, e);\r\n        this.searchBooksHandler(this.state.search);\r\n    };\r\n\r\n\r\n    // Page Composition\r\n    render() {\r\n        return (\r\n          <Container>\r\n              {/* Book Search Form will appear here */}\r\n                <Row>\r\n                    <Col size = \"md-6\">\r\n                        <h2>Book Search</h2>\r\n                        <SearchForm\r\n                            value = {this.state.search}\r\n                            inputChangeHandler = {this.handleInputChange}\r\n                            formSubmissionHandler = {this.handleFormSubmit}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* Cards will appear here */}\r\n                <Row>\r\n                    <Col size = \"md-12\">\r\n                    {this.state.books.map((item) => (\r\n                        <ForegroundCard\r\n                            title={item.title}\r\n                            authors={item.authors}\r\n                            description={item.description}\r\n                            image={item.image}\r\n                            link={item.link}\r\n                            key={item.key}\r\n                            button={() => (\r\n                                <button\r\n                                    onClick={() => this.saveBookHandler(item.id)}\r\n                                    className=\"btn btn-dark\"\r\n                                >\r\n                                    Save\r\n                                </button> \r\n                            )}\r\n                        />\r\n                    ))}\r\n                    </Col>\r\n                </Row>\r\n          </Container>\r\n        );\r\n    };\r\n};\r\n\r\nexport default SearchPage;","// Dependencies\r\nimport React from \"react\";\r\n\r\n// List component\r\nconst List = ({ children }) => (\r\n    <ul className = \"list-group\">{ children }</ul>\r\n);\r\n\r\n// List Entries\r\nfunction ListEntry({ children }) {\r\n    return <li className = \"list-group-item\">{ children }</li>\r\n};\r\n\r\nexport { List, ListEntry };","// Dependencies\r\nimport React, { Component } from \"react\";\r\n\r\nimport Container from \"../components/Grid/Container\"\r\nimport Col from \"../components/Grid/Col\";\r\nimport ForegroundCard from \"../components/Cards/ForegroundCard\";\r\n\r\nimport API from \"../utils/API\";\r\nimport { List } from \"../components/List\";\r\n\r\n\r\nclass SavedPage extends Component {\r\n  state = { books: [], };\r\n\r\n  // Initial State\r\n  componentDidMount() {\r\n    this.getSavedBooks();\r\n  };\r\n\r\n  // Handler Functions\r\n  getSavedBooks = () => {\r\n    API.saveBook()\r\n      .then((res) =>\r\n        this.setState({\r\n          books: res.data.items,\r\n        })\r\n      )\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  BookDeleteHandler = (id) => {\r\n    API.deleteBook(id).then((res) => this.getSavedBooks());\r\n  };\r\n\r\n  // Page Composition\r\n  render () {\r\n    return (\r\n      <Container>\r\n        <Col size = \"md-12\">\r\n          <h1 className=\"text-center\">Google Book Search</h1>\r\n          <hr />\r\n          <h2 className=\"text-center\">Saved Books Gallery</h2>\r\n        </Col>\r\n      \r\n        <Col size = \"md-12\">\r\n          <ForegroundCard title = \"Saved Books\" icon = \"download\">\r\n            {this.state.books.length ? (\r\n              <List>\r\n                {this.state.books.map((item) => (\r\n                  <Col size = \"md-12\" \r\n                    key = \"\"\r\n                    title = \"\"\r\n                    subtitle = \"\"\r\n                    authors =\"\"\r\n                    description = \"\"\r\n                    link = \"\"\r\n                    image = \"\"\r\n                    Button = {() => (\r\n                      <button onClick = {() => this.BookDeleteHandler(item.id)}\r\n                      className = \"btn btn-danger\"\r\n                      >Delete</button>\r\n                    )}\r\n                  />\r\n                ))}\r\n              </List>\r\n            ) : (\r\n              <h2 className = \"text-center\">No Books have been saved!</h2>\r\n            )}\r\n          </ForegroundCard>\r\n        </Col>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n  export default SavedPage;","//Dependencies\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Container from \"./components/Grid/Container\";\nimport Col from \"./components/Grid/Col\"\nimport NavBar from \"./components/Navbar\";\n\nimport SearchPage from \"./pages/SearchPage.js\";\nimport SavedPage from \"./pages/SavedPage.js\";\nimport \"./App.css\";\n\n// App Page Composition\nclass App extends Component {\n  render() {\n    return(\n      <Container>\n        <Router>\n          <Col size = \"md-12\">\n            {/* Navbar will appear at top of each page */}\n            <NavBar />\n            <Switch>\n              <Route exact path = \"/\" component= {SearchPage} />\n              <Route path = \"/search\" component= {SearchPage} />\n              <Route path = \"/saved\" component= {SavedPage} />\n            </Switch>\n          </Col>\n        </Router>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(\n<App />,\ndocument.getElementById(\"root\")\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}